{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        //"plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "prettier/prettier": [
          "error"
        ],
        "eqeqeq": [
          "error",
          "smart"
        ],
        "array-callback-return": "error",
        "no-await-in-loop": "error",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": "error",
        "require-atomic-updates": "error",
        "curly": [
          "error",
          "all"
        ],
        "arrow-body-style": [
          "error",
          "as-needed",
          {
            "requireReturnForObjectLiteral": true
          }
        ],
        "consistent-return": "error",
        "consistent-this": "error",
        "no-console": [
          "warn",
          {
            "allow": [
              "error"
            ]
          }
        ],
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-confusing-arrow": "error",
        "no-eval": "error",
        "no-implied-eval": "error",
        "no-floating-decimal": "error",
        "no-implicit-coercion": "error",
        // todo: waring
        "no-magic-numbers": "off",
        "no-multi-assign": "error",
        "no-multi-str": "warn",
        "no-negated-condition": "warn",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-new-object": "error",
        "no-param-reassign": "error",
        "no-return-assign": "error",
        "no-throw-literal": "error",
        "no-underscore-dangle": [
          "warn",
          {
            "allowAfterThis": true,
            "allowAfterSuper": true,
            "enforceInMethodNames": true
          }
        ],
        "no-useless-catch": "error",
        "no-useless-call": "error",
        "no-useless-concat": "warn",
        "no-var": "error",
        // @typescript-eslint/eslint-plugin, the ways this linter works is you have to disable the corresponding eslint rules to avoid conflicting fixes, ie: no-shadow off, but ts/no-shadow error
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/no-duplicate-enum-values": "error",
        "@typescript-eslint/no-duplicate-type-constituents": "error",
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "allowShortCircuit": true,
            "allowTernary": true
          }
        ],
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": [
          "error"
        ],
        // import
        "import/no-unresolved": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/template/eqeqeq": [
          "error",
          {
            "allowNullOrUndefined": true
          }
        ],
        "@angular-eslint/template/i18n": "off",
        "@angular-eslint/template/no-inline-styles": "off",
        "@angular-eslint/template/use-track-by-function": "off",
        "@angular-eslint/template/attributes-order": "warn",
        "@angular-eslint/template/button-has-type": "warn",
        "@angular-eslint/template/cyclomatic-complexity": "off",
        "@angular-eslint/template/no-call-expression": "warn",
        "@angular-eslint/template/label-has-associated-control": "warn",
        "@angular-eslint/template/elements-content": "off",
        "@angular-eslint/template/no-interpolation-in-attributes": "warn",
        "@angular-eslint/template/alt-text": "error"
      }
    }
  ]
}
